@{
    ViewBag.Title = "Home Page";
}

<style>
    .CodeMirror {
        border: 2px inset #dee;
    }
</style>

<br /> <br />

<div class="row">

    @using (Html.BeginForm("GetList", "Home", FormMethod.Get))
    {
        <div class="col-md-6 col-sm-12">
            <h2>Synchronize Method</h2>
            <div>
                <textarea id="c-code">
                    public ActionResult GetList()
                      {
                      //Create a stopwatch for getting Execution time
                      var watch = new Stopwatch();
                      watch.Start();

                      var country = GetCountry();
                      var state = GetState();
                      var city = GetCity();

                      watch.Stop();
                      ViewBag.WatchMilliseconds = watch.ElapsedMilliseconds;

                      return View();
                    }
                </textarea>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Get Execution Time</button>
            @if (ViewBag.WatchMilliseconds != null)
            {
                <h1 class="label label-danger">@ViewBag.WatchMilliseconds millisecond</h1>
            }

        </div>
    }


    @using (Html.BeginForm("GetListAsync", "Home", FormMethod.Get))
    {
        <div class="col-md-6 col-sm-12">
            <h2>Asynchronize Method</h2>
            <div>
                <textarea id="c-code2">
                    public async Task<actionresult>
                      GetListAsync()
                      {
                      //Create a stopwatch for getting Execution time
                      var watch = new Stopwatch();
                      watch.Start();

                      var country = GetCountryAsync();
                      var state = GetStateAsync();
                      var city = GetCityAsync();

                      var content = await country;
                      var count = await state;
                      var name = await city;

                      watch.Stop();
                      ViewBag.WatchMilliseconds = watch.ElapsedMilliseconds;

                      return View();
                    }
                </textarea>
            </div>
            <br />
            <button type="submit" class="btn btn-primary">Get Execution Time</button>
            @if (ViewBag.WatchMillisecondsAsync != null)
            {
                <h1 class="label label-danger">@ViewBag.WatchMillisecondsAsync millisecond</h1>
            }
        </div>
    }

    <script>
        var cEditor = CodeMirror.fromTextArea(document.getElementById("c-code"), {
            lineNumbers: true,
            matchBrackets: true,
            mode: "text/x-csrc"
        });

        var cEditor = CodeMirror.fromTextArea(document.getElementById("c-code2"), {
            lineNumbers: true,
            matchBrackets: true,
            mode: "text/x-csrc"
        });
    </script>

</div>
